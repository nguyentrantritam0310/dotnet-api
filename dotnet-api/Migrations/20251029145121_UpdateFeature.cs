using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace dotnet_api.Migrations
{
    /// <inheritdoc />
    public partial class UpdateFeature : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "admin-id",
                columns: new[] { "ConcurrencyStamp", "PasswordHash" },
                values: new object[] { "e59f1deb-a73b-427b-b3e2-d35b4d7e0e37", "AQAAAAIAAYagAAAAEMkA+vM05DWibzjlqfOOqH+PdKlCwa26mohqUdC9FcbE+1LGvmRsAhRAV0dPJKc8mg==" });

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee1-id",
                column: "ConcurrencyStamp",
                value: "8090cedd-9e27-4585-80f6-71d7ef2cc3eb");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee2-id",
                column: "ConcurrencyStamp",
                value: "8219b848-67c4-4c4d-99ac-865ee4f80f12");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee3-id",
                column: "ConcurrencyStamp",
                value: "f9358db6-f53e-479f-86ff-fd56958c2c5b");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee4-id",
                column: "ConcurrencyStamp",
                value: "09b064ba-bb84-4556-a052-6e011c3af822");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee5-id",
                column: "ConcurrencyStamp",
                value: "484a4bcc-8ea7-4693-aae9-f7508a7a963e");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-manager1-id",
                column: "ConcurrencyStamp",
                value: "b2e64663-3025-4118-85d0-24753fc41af7");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-manager2-id",
                column: "ConcurrencyStamp",
                value: "6f7f3ad5-fae3-4d2c-8a15-3ab506dd78d5");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "manager1-id",
                column: "ConcurrencyStamp",
                value: "0bf81f2f-b3bb-4c8c-97ee-d8623d992c48");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "manager2-id",
                column: "ConcurrencyStamp",
                value: "cc371a0f-07b3-4486-9175-2bb17a62f48e");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "manager3-id",
                column: "ConcurrencyStamp",
                value: "fe3081d5-b884-4c29-ad27-14de8eb7385b");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "tech1-id",
                column: "ConcurrencyStamp",
                value: "1fe44777-e559-4a3d-9dd8-87d31a515cbc");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "tech2-id",
                column: "ConcurrencyStamp",
                value: "59b47999-4458-4251-b992-c2fe674a6f7a");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "tech3-id",
                column: "ConcurrencyStamp",
                value: "ec6a067d-8a58-4e78-a451-422634f92fcd");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker1-id",
                column: "ConcurrencyStamp",
                value: "b94f273d-8d21-4d8a-bfc9-445182fe7747");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker2-id",
                column: "ConcurrencyStamp",
                value: "40f1929c-b8eb-4f70-bccc-daf673d3c263");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker3-id",
                column: "ConcurrencyStamp",
                value: "cceadff9-2258-4924-bbca-12376be78596");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker4-id",
                column: "ConcurrencyStamp",
                value: "516cc918-ba07-4a54-a100-c0906d5dd9f0");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker5-id",
                column: "ConcurrencyStamp",
                value: "db69dbe3-e889-4036-80a9-2c314b6d7730");

            migrationBuilder.UpdateData(
                table: "Attendances",
                keyColumn: "ID",
                keyValue: 1,
                columns: new[] { "CheckInDateTime", "CheckOutDateTime", "CreatedDate", "LastUpdated" },
                values: new object[] { new DateTime(2025, 10, 28, 8, 0, 0, 0, DateTimeKind.Local), new DateTime(2025, 10, 28, 17, 0, 0, 0, DateTimeKind.Local), new DateTime(2025, 10, 28, 21, 51, 20, 720, DateTimeKind.Local).AddTicks(2258), new DateTime(2025, 10, 28, 21, 51, 20, 720, DateTimeKind.Local).AddTicks(2365) });

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "LV001",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 29, 21, 51, 20, 720, DateTimeKind.Local).AddTicks(6663));

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "LV002",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 29, 21, 51, 20, 720, DateTimeKind.Local).AddTicks(6761));

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "OT001",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 29, 21, 51, 20, 720, DateTimeKind.Local).AddTicks(6139));

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "OT002",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 29, 21, 51, 20, 720, DateTimeKind.Local).AddTicks(6658));

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 1,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.1783445,-0.27284375,-0.052493747,0.4491644,-0.5020474,0.4024122,0.22803098,-0.52436996,-0.23213387,0.7495119,0.9340085,-0.66429025,0.80686337,0.08213231,0.6696109,-0.26929474,0.23090027,0.014077786,0.776342,0.4921399,-0.5268544,0.5498395,0.055520054,-0.8862973,0.3569611,-0.47253734,0.1845232,-0.2650186,0.34492812,-0.89876634,-0.8889544,-0.052093968,0.8393231,0.020923177,0.20396815,0.62823373,0.6618565,-0.6691781,0.23841962,-0.891473,-0.041453328,0.45814312,0.6841981,-0.20759097,-0.67504525,-0.6491628,0.41950986,0.73669314,-0.45328146,0.96873987,0.52106786,-0.8669323,-0.66344327,0.40084752,-0.5393336,0.628505,0.6716362,-0.16619647,-0.9077967,0.9704899,-0.782111,-0.50695044,0.13070194,-0.33336753,0.6384663,-0.013897532,-0.50361335,-0.21405983,0.8781642,-0.9586228,0.06884877,-0.09992159,0.7756582,0.66781497,-0.4664068,0.01500247,0.8656414,-0.73688895,0.78874797,0.006123926,0.1079528,0.44783005,-0.8117371,0.37618825,-0.41983423,0.9779779,-0.3886507,-0.5615244,-0.43974322,0.5754632,0.9565975,-0.17194703,-0.76138145,0.2679297,0.890638,-0.5345029,-0.6725588,0.017565642,0.15394276,0.33885226,0.85445046,-0.3664303,0.858529,-0.49465865,-0.100108914,-0.37901053,-0.6425904,-0.33125827,-0.13274571,0.44566393,0.76286364,0.40852517,0.04505554,0.08607938,-0.13746287,-0.22994104,-0.69521326,0.7545137,-0.91353333,0.66048837,-0.6252468,-0.9420889,-0.7743166,-0.697299,-0.9152203,-0.7592042,-0.33854014,-0.49227154,0.777177,-0.93190384,-0.31243873,-0.15192425,0.10916827,-0.55010426,0.15167344,-0.5256169,0.58930105,0.6829215,-0.52370286,0.9591763,0.62056834,0.9426076,0.5712213,0.11459286,0.81259954,-0.45192763,0.7829974,0.15253918,-0.5946074,0.12057905,-0.83928967,-0.4270725,-0.06890105,0.49345437,-0.035900906,0.7965394,-0.5921137,0.555828,-0.5794383,-0.3409047,0.95952964,0.8496811,-0.10843524,-0.20084184,-0.24189736,-0.085212134,-0.70064306,-0.4048402,0.9344059,-0.61184597,0.1807579,-0.3781348,0.2782165,-0.87270963,-0.9600799,-0.5678544,-0.51331025,0.11109053,-0.50989854,0.5367073,-0.54220164,0.50892067,-0.8976641,-0.34340206,0.90738577,-0.8853662,0.9169768,0.6157139,0.48579663,0.355134,-0.9335032,-0.9665269,0.26235983,0.8172019,0.99964666,0.7708872,0.05104281,-0.22793685,-0.6435098,-0.10218833,-0.75128454,0.18783762,0.21813323,-0.98276144,0.9398211,0.5388451,0.294711,-0.19619144,0.4535343,-0.46804652,0.30984965,0.29679576,0.065726526,-0.11614564,-0.79870313,-0.5493911,0.7473452,-0.7650332,-0.108227625,-0.35653114,-0.002188928,-0.316357,0.109363176,-0.42072806,-0.6783428,0.14728482,0.3595054,0.46101463,-0.8723563,-0.73096716,0.3811028,0.7146266,-0.24539968,0.5922898,0.28799185,0.26996076,-0.70921254,-0.9149027,-0.2832232,-0.63145936,-0.18007721,0.11316823,-0.8378204,-0.04615686,-0.9547156,-0.23029895,-0.032253448,-0.62149453,0.615905,0.54903775,-0.976458,-0.183924,0.88029075,0.71302134,0.9000006,0.5650724,-0.92152554,-0.3611387,0.6955814,-0.20746367,-0.82066023,0.83369637,-0.32383513,0.18450145,0.1508507,0.595223,-0.45780456,0.47343674,0.5958625,-0.06866388,-0.8401785,0.6622479,0.51819,-0.47676829,0.82354605,0.88464284,-0.47853655,-0.84448,-0.46601242,0.5519562,-0.82046175,-0.0190001,0.84510964,-0.42139405,-0.75450915,-0.4349732,0.83433586,0.041578975,0.6922892,0.7229194,0.19148633,0.65192616,-0.610484,0.92424047,-0.8107991,-0.013773564,-0.5629966,-0.022321887,0.80299246,-0.5499387,-0.7724944,0.4943098,-0.21735702,-0.31543112,0.38921627,-0.63870585,0.29788595,0.35705906,0.8894753,-0.9846422,0.043608975,0.9229544,-0.8951263,-0.8563748,-0.38700193,0.19833985,0.9885867,-0.9024411,-0.06098941,-0.4141761,0.7608872,0.5006165,0.78114754,0.87294304,0.7398498,-0.49210468,0.2727319,0.5939496,-0.6659692,-0.16268036,0.44763947,0.54378533,-0.6474724,-0.91607374,0.32445055,-0.31477153,-0.8016431,0.16054077,0.18938969,0.88419676,0.26714087,-0.5227232,0.1521037,0.67693144,-0.32068956,0.26853192,0.54705244,-0.7541092,0.31124237,-0.009138945,-0.0023602773,-0.66055554,-0.9613325,0.21716854,-0.31082585,-0.27311087,0.71316224,-0.09030008,-0.05528092,-0.11867905,0.088562235,0.70393634,0.02302823,0.052155633,-0.4322817,0.49982363,0.5704268,-0.97905254,-0.18082535,0.9277696,-1.7070677E-05,-0.17195407,-0.09183078,0.05481385,0.31868306,0.2836104,-0.65148723,-0.8957839,0.19363262,-0.5286821,-0.03915714,0.026841111,-0.7172928,0.34316978,0.8396799,0.10819499,0.50511783,0.13535906,0.3947521,-0.40243858,-0.027933815,0.288657,-0.7841783,-0.69193125,-0.20436549,0.5632045,0.45424858,-0.90005195,0.10921312,0.17948683,0.6981051,0.526105,0.42671612,0.38347277,0.9908781,-0.8304062,0.43127525,-0.01614633,0.8984855,0.40556374,-0.62162364,0.60894614,0.7160673,-0.5265988,0.9204781,-0.93827885,0.42122915,0.67985845,0.21247572,0.45952332,0.9947058,-0.5649323,-0.37380463,-0.7783868,-0.04429657,0.71132594,-0.38777575,-0.3998995,-0.74082065,0.75547856,0.82936186,-0.7514353,-0.004996998,-0.9858542,-0.22678725,0.43473786,0.600125,-0.100765556,0.35229164,0.67008615,0.67691976,-0.47873583,0.23687358,0.9891883,-0.78081495,0.36312005,0.5725897,0.7424205,-0.61240935,-0.2660866,-0.85802466,0.7743901,-0.112527646,0.6496898,0.18478101,0.26303738,-0.10009039,0.20510289,-0.57223064,-0.7204478,0.55736953,-0.16882522,-0.2753257,-0.8569931,0.5762019,-0.87018836,-0.38605687,0.7019215,0.70018846,-0.51425976,-0.53840387,-0.4780053,-0.6724332,0.5423896,0.78260356,0.47344166,0.19819416,-0.36299297,-0.9975718,0.5925834,-0.86126375,-0.13019623,-0.7874901,0.525266,0.61350316,-0.94502825,0.36109233,0.3453132,-0.17063522,0.51017535,-0.46517172,-0.6049779,-0.5285349,0.07273944,-0.8872834,-0.15425503,0.79658985,0.09386664,-0.5870136,-0.9106266,-0.2508231,0.8706682,-0.957768,0.9018504,-0.72768277,0.6199807,0.44682327,0.34508276,0.86708623,0.71133935,-0.93515676,-0.73709744]", "{\"bounds\":{\"x\":0.2,\"y\":0.3,\"width\":0.6,\"height\":0.7},\"landmarks\":[{\"type\":\"leftEye\",\"x\":0.3,\"y\":0.4},{\"type\":\"rightEye\",\"x\":0.7,\"y\":0.4},{\"type\":\"nose\",\"x\":0.5,\"y\":0.55},{\"type\":\"mouth\",\"x\":0.5,\"y\":0.7}],\"contours\":[{\"type\":\"face\",\"points\":[{\"x\":0.1,\"y\":0.2},{\"x\":0.9,\"y\":0.2},{\"x\":0.9,\"y\":0.9},{\"x\":0.1,\"y\":0.9}]}],\"headEulerAngles\":{\"x\":2.5,\"y\":-1.2,\"z\":0.8},\"probabilities\":{\"leftEyeOpenProbability\":0.9,\"rightEyeOpenProbability\":0.85,\"smilingProbability\":0.7},\"trackingId\":null,\"confidence\":0.95}", new DateTime(2025, 9, 29, 21, 51, 20, 736, DateTimeKind.Local).AddTicks(6583), new DateTime(2025, 9, 29, 21, 51, 20, 736, DateTimeKind.Local).AddTicks(6394) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 2,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[-0.77680486,0.31399348,-0.65451777,0.87605023,0.4009241,0.1502078,-0.8758556,0.47899887,0.015299532,-0.5129859,0.40746957,0.89713866,0.18176547,-0.8773571,0.069554664,0.97974706,-0.92838156,-0.7459236,0.8304828,-0.73345035,-0.26111332,-0.9594871,0.39353007,-0.18760552,0.5529725,0.8138287,-0.09594688,0.9741973,0.8973541,0.71195287,-0.15059888,0.47471967,-0.35642895,0.07106443,0.9023254,0.7149098,0.31855512,0.6938195,0.58092344,0.24413317,-0.50606143,-0.9862092,-0.17150849,0.018737031,0.3794267,-0.88788295,-0.9000475,0.7680249,-0.25789404,-0.7669214,0.7534266,0.034468647,0.7900718,0.8083013,-0.13887428,-0.8173178,0.9204634,0.53308773,-0.67692226,0.5870954,-0.75384533,-0.85005295,0.5816448,0.3033467,0.637613,0.93274987,0.25356764,-0.889299,-0.7796826,0.3546449,-0.33880806,-0.6222011,-0.32684702,-0.4136504,0.7726111,-0.27490413,0.21202138,-0.62520695,0.43296778,0.44085547,0.7138761,0.13602819,0.23209135,0.6642755,0.95852625,0.81493247,0.6846479,-0.1647303,-0.7900613,0.7196432,0.79444635,0.7854673,0.37074175,0.99382806,-0.0020215227,-0.6560085,-0.5678539,0.5251448,0.38112405,0.4466768,-0.14145058,0.9892515,0.5477075,0.38746107,0.57188666,0.3756277,-0.63868433,0.20372218,-0.96430975,-0.86397016,-0.029339151,0.5456704,-0.89988005,-0.117777735,0.87321925,0.1101265,-0.08214429,0.91736925,0.34482047,0.82268053,-0.751898,-0.58170205,0.9007623,-0.49932572,0.56019855,-0.1242754,0.007057158,-0.32067505,0.5883711,0.4286196,-0.7070502,0.68687654,-0.0063310047,0.986291,-0.41769394,0.7246247,0.5883207,0.8446303,-0.90761113,-0.41710147,0.45361683,-0.51907426,-0.20042053,-0.92609113,-0.2510177,-0.75122404,0.6853474,-0.5114805,-0.8793912,0.88785195,0.42613578,-0.4852232,-0.8196756,0.55844355,0.19857481,-0.55974853,-0.9115108,0.047033206,0.8272625,-0.30383795,-0.63142943,0.6819907,0.6153511,-0.39292935,0.84308004,0.28378427,-0.4479986,-0.88617104,-0.7000838,-0.85140544,0.5218058,0.073225416,0.8249804,-0.23807806,-0.6309363,0.7671763,0.61871845,0.8268535,0.75169194,0.31142256,0.1903772,-0.48146233,-0.44128388,0.70051914,-0.9975162,0.778173,0.5065522,0.43522546,-0.21228382,-0.85794544,0.6361355,-0.45871252,-0.9826322,0.3962268,-0.785672,0.7716261,-0.13442534,-0.8074912,-0.7691712,0.46519804,0.6967746,0.5715184,-0.8113967,0.97201425,-0.6339538,-0.6470896,-0.31020358,0.4184024,0.18937984,0.43139854,-0.17846698,-0.73836434,0.29534125,-0.48416007,0.50578487,0.85003287,0.12327458,0.9148319,-0.39541316,-0.935093,0.77723205,0.11677591,0.32611278,-0.8421384,-0.48754096,-0.01948169,0.055857636,-0.5712464,-0.45240605,-0.4025624,-0.09839838,0.42620963,0.5960247,-0.7135061,0.614648,0.61885875,-0.67006564,-0.41329813,0.33447298,0.64957345,0.08837661,-0.9118502,-0.7541544,0.35631764,0.32052156,0.37449986,0.24594624,0.50152785,0.89044195,-0.6357049,-0.35164848,-0.04925724,0.587922,-0.8340782,0.687966,-0.4200013,-0.7545944,-0.9692583,0.4595552,0.38552785,0.29705274,-0.73895717,-0.12919155,-0.40805775,-0.4702031,0.3953234,-0.334389,0.008847321,-0.09880801,0.88692605,0.5200985,-0.46342728,-0.41964108,-0.044986572,-0.023469603,0.68908226,-0.12906972,0.96979517,-0.16265996,0.13795918,0.73457205,0.5543298,-0.46168837,-0.8167011,0.94908607,0.9508589,0.83828765,0.43010285,-0.40147203,0.034649257,0.37345314,-0.70080733,0.12714665,0.9489451,-0.6474793,-0.1726662,0.21734133,0.65390337,-0.17347927,0.9251982,-0.29111114,-0.76290107,-0.39966416,-0.9964841,-0.15580343,-0.8882212,-0.62961614,-0.36709145,0.18939142,0.99888366,0.7090684,-0.7243895,0.19340165,-0.678404,0.6509558,0.7427229,0.7227312,-0.3124904,-0.35714382,-0.42106196,0.5570357,0.23550814,-0.5896806,0.86654276,-0.4865271,0.22090587,0.40942606,-0.3685862,-0.39750725,-0.8508034,-0.52825904,0.2170269,0.14327443,-0.08785813,-0.57092965,0.49747312,-0.04600605,-0.46520424,0.3391023,0.8373072,0.58047503,0.20537914,-0.75928855,-0.40035573,0.32558084,0.09784266,0.105790995,-0.19444937,-0.7020107,-0.39020225,0.10460261,-0.47016826,0.011047187,-0.7524173,-0.63183755,0.4733807,0.82677954,-0.2662069,0.49004295,0.6232907,-0.29764724,0.73897004,-0.9695842,0.040194813,0.52714276,-0.5079585,0.13233607,-0.7187402,0.8925257,-0.8465173,-0.21127102,0.18793543,0.3484073,-0.19445105,-0.0015369668,-0.64834344,-0.0052032885,0.8106751,-0.4590381,0.41563025,-0.88488513,-0.39612457,-0.66657555,0.992695,0.04459399,0.9419092,-0.7940203,-0.104308255,-0.4560206,-0.044310383,0.6706936,-0.77979916,0.044752788,0.7158116,0.1349545,0.84150493,0.17496334,0.20051663,0.07250154,-0.16646068,0.9655066,-0.17546879,-0.08697506,-0.8554933,0.82106876,0.91666716,0.18142445,-0.7945018,0.24911964,-0.9834941,-0.521416,-0.9838955,-0.8071688,-0.9255873,0.5081758,-0.9015227,0.4055456,-0.9622792,0.9956008,0.58523357,-0.7139382,-0.7633557,0.73728037,-0.06316393,-0.5172109,-0.43147185,-0.85681736,0.6325957,0.67059445,0.15695807,0.17669323,0.7942801,-0.26182646,0.70742255,0.45012367,0.29058367,0.6908505,-0.8110822,-0.82837373,0.12792681,-0.23951527,-0.9995185,0.6465721,-0.4725265,-0.5228944,0.65458906,-0.9726304,-0.029659916,-0.79236424,0.03647718,-0.56404066,0.13724254,0.2049158,0.487268,-0.45252246,0.7288623,0.08725082,0.97618884,0.66171753,0.2525406,0.7734845,0.5488288,-0.46509624,-0.9078384,-0.16018733,-0.3156961,0.27793095,-0.51459134,-0.37571096,-0.7824079,-0.5923732,0.2166278,0.8660945,-0.13232599,-0.17525117,-0.71441966,-0.4099278,0.20980689,-0.54026955,-0.17179997,-0.45884144,0.17284256,0.4249599,-0.36588272,-0.27900127,-0.9605493,-0.4106357,0.25090554,0.15994503,0.7212614,-0.79666716,0.71466166,-0.47279978,-0.08091435,0.35444227,0.21165596,0.4655777,0.5544105,0.6876608,0.7928017,-0.62334186,0.5419609,-0.65394896,0.99004364,-0.37114963,0.21933155,0.271148,-0.66275823,-0.33748084,-0.7381028,0.13879007,0.8774439]", "{\"bounds\":{\"x\":0.25,\"y\":0.28,\"width\":0.55,\"height\":0.65},\"landmarks\":[{\"type\":\"leftEye\",\"x\":0.35,\"y\":0.38},{\"type\":\"rightEye\",\"x\":0.65,\"y\":0.38},{\"type\":\"nose\",\"x\":0.5,\"y\":0.53},{\"type\":\"mouth\",\"x\":0.5,\"y\":0.68}],\"contours\":[{\"type\":\"face\",\"points\":[{\"x\":0.15,\"y\":0.18},{\"x\":0.85,\"y\":0.18},{\"x\":0.85,\"y\":0.88},{\"x\":0.15,\"y\":0.88}]}],\"headEulerAngles\":{\"x\":-1.8,\"y\":2.1,\"z\":-0.5},\"probabilities\":{\"leftEyeOpenProbability\":0.8,\"rightEyeOpenProbability\":0.9,\"smilingProbability\":0.6},\"trackingId\":null,\"confidence\":0.92}", new DateTime(2025, 10, 4, 21, 51, 20, 736, DateTimeKind.Local).AddTicks(8744), new DateTime(2025, 10, 4, 21, 51, 20, 736, DateTimeKind.Local).AddTicks(8741) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 3,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.26804575,0.90083075,0.7434582,-0.69706386,-0.69610447,-0.10199658,0.020257777,-0.51763237,0.26273292,0.22451629,-0.11906939,0.45856756,-0.4433324,0.16315338,-0.5305016,0.22878884,-0.08766344,0.4940751,0.8846235,0.04095942,0.00462775,-0.46881372,0.7315401,0.5110862,0.7489839,0.10019471,-0.37641695,0.21341324,-0.5502199,0.322672,0.5877566,-0.9984667,0.44781896,0.12120567,-0.39931735,0.8015858,-0.024746284,0.056817137,0.9234273,-0.62026066,-0.97066957,-0.4305615,0.9727849,0.24506503,-0.5661014,0.87339693,-0.2196048,0.7993567,-0.062506616,-0.50258267,0.98578537,0.9358696,0.24358684,-0.78424484,0.26158506,-0.26314053,-0.8307094,-0.767628,-0.4460478,0.20370084,-0.7255796,0.80684453,-0.9674124,0.9400609,0.6367597,-0.120602705,-0.98925143,0.4354619,-0.43752927,-0.3320874,-0.74646485,0.8555194,0.57064784,0.50488424,0.011628968,-0.56481075,-0.44159862,-0.51352495,0.0771876,0.87558705,-0.6802005,-0.17577368,-0.72408015,0.9523628,0.33688667,0.65188706,-0.24205352,0.23206381,0.85962063,0.8638232,0.6322952,-0.25711825,-0.49713504,-0.2802736,-0.89468104,-0.7775141,-0.4631491,-0.967276,0.60830534,0.55450135,0.8626483,0.3449333,0.23688598,-0.7304192,-0.75611776,-0.86973405,-0.63477826,0.7387026,0.2041262,-0.17360422,-0.8215419,0.68281555,0.15518437,-0.32163486,-0.116098665,0.45019406,0.5309247,-0.9197752,-0.39682576,0.98487264,-0.87854916,-0.22131523,0.5758413,-0.30135244,0.03561743,0.5106534,0.35265446,-0.14907858,0.39956528,-0.21085694,0.8983384,-0.47432262,-0.12183028,0.52268624,-0.98706126,-0.025133777,0.58734035,-0.9936609,0.70848054,0.20662074,0.28666532,0.019243855,-0.97206235,0.033224847,0.6853651,0.9494796,0.5876974,0.82449985,0.8358251,-0.3448751,-0.30843878,-0.5433739,0.42954975,0.6234327,0.43305054,0.08396355,0.769092,-0.46176156,0.23396336,-0.26677117,-0.22238854,0.5143003,-0.6608626,-0.58501685,-0.07194258,0.6527807,-0.19535416,0.63249815,-0.33457357,0.9090351,0.8628537,0.5245856,-0.6282557,0.3965535,-0.30179268,0.10220696,-0.24925286,-0.45738357,0.01328246,0.086137824,0.92295605,0.5281547,0.015096347,-0.25555962,-0.9024182,0.44171226,0.09612762,0.25473705,-0.9103643,-0.07102484,0.20577422,0.04910191,-0.22762428,-0.024748283,-0.57099074,0.77236503,-0.3198935,0.6129545,-0.89483255,-0.9674156,0.14483377,0.95519924,0.15907338,0.92678994,-0.20772882,0.16697562,-0.91511816,-0.9670037,-0.074774645,-0.66915643,-0.6667836,0.22647555,0.524956,-0.85217446,-0.1897272,0.24945682,-0.500796,0.594697,-0.68259865,0.48634514,-0.44334692,0.5499088,0.5428624,0.73645127,-0.2967391,-0.1862482,-0.24779011,0.39649254,-0.03245578,-0.074157685,-0.5778996,0.13779266,-0.562551,-0.01930194,0.941304,0.9677568,-0.63091874,0.08830639,0.9521692,-0.069393806,0.35683042,0.063131355,-0.6704883,0.75879216,-0.40424123,0.97929865,0.52414596,-0.3754498,-0.8350211,0.17955245,0.27316105,0.08540953,0.29555315,-0.38117772,0.47593132,0.594925,-0.5876632,0.4226221,0.22352907,0.9785194,-0.5852343,-0.31161073,0.06545205,0.99938303,0.90874314,0.19542374,-0.21097346,-0.4557421,-0.79347855,-0.15748398,-0.11962443,0.41089755,0.64252776,0.38679513,-0.8704853,0.49352172,0.22039711,0.78407025,0.14069252,-0.27603778,0.28960586,-0.8723403,0.23151363,0.78799176,0.65268123,0.33669093,0.8422395,0.8186267,0.50476676,-0.6536209,0.55542,-0.053540863,0.8647773,0.9736498,-0.48415953,-0.33155885,0.9976793,-0.66987133,0.850049,0.400335,0.19027212,-0.020111961,-0.5819713,0.32246292,-0.7008231,0.8622635,0.44288173,0.90875804,-0.5106924,0.9824096,-0.6254721,-0.37173343,-0.7180704,-0.50043315,-0.31108648,-0.71289396,0.45687565,0.27746028,-0.6532982,-0.4279478,0.35318422,-0.029600177,0.03949117,0.8601424,0.28709605,0.93391645,0.5461202,0.66887796,-0.12904534,0.46107358,0.49584243,-0.10973153,0.93402123,0.7403575,0.5336901,-0.69028217,0.70963097,0.9090507,0.48881492,0.79041773,0.8938092,0.93348145,0.32931918,0.52235717,0.9718512,-0.07284661,-0.33547047,0.36521047,0.28473628,-0.77126557,0.21156551,-0.27978095,0.98342687,0.27799684,-0.9528492,-0.7801277,0.94039685,-0.44211367,-0.96463317,-0.6347396,-0.6838567,0.77400374,0.037803363,0.02823399,-0.5134328,0.4842594,-0.3057547,-0.4584279,-0.034123268,-0.6208043,-0.42252496,0.5478249,0.7886454,-0.44371596,-0.321757,0.41970274,0.6410807,0.517134,0.8882912,-0.6400573,0.2693869,-0.81909025,-0.6158583,-0.35777977,-0.7504919,-0.2243766,-0.09315839,-0.34397557,0.6932067,0.3138178,-0.6306791,0.15174465,0.87368387,0.123554476,0.4742745,-0.8801946,-0.10432188,-0.6989148,0.03578996,-0.51240814,-0.76709193,-0.8770426,-0.6006662,-0.094459444,0.65125936,0.6637406,-0.06842633,0.4271428,-0.4002462,-0.37255195,-0.42120835,-0.57673717,-0.33040482,0.6754242,0.095873535,-0.8647665,0.38986206,-0.60441685,-0.22127408,0.7109438,-0.4225822,-0.9617791,-0.1516346,0.6520589,-0.99012524,0.4257304,0.67414105,-0.3349091,0.08200957,-0.44156238,-0.47597536,0.33999547,-0.51865596,0.40069932,-0.8729654,0.14642946,0.78157604,0.47860116,-0.009039147,-0.41423252,0.84404975,0.4796988,-0.9437294,0.06575866,-0.26497382,0.9460581,-0.5178505,-0.8017403,-0.97231907,0.339041,-0.27005666,-0.49990502,0.52235925,0.32484618,0.9101741,-0.8053128,0.27459204,-0.25272515,-0.10433421,-0.774471,0.9895995,-0.7335172,-0.65486676,-0.9586838,-0.8965766,0.23879616,0.9419188,0.26889583,0.5483896,0.94944406,-0.6463425,0.9112609,0.4046223,-0.8070416,0.86689407,0.09771898,0.9819503,0.7826067,-0.08296726,-0.93618333,-0.05641909,0.47588134,-0.36259004,0.74296856,0.82849425,-0.97607034,0.81763625,0.1564979,0.49052528,0.9323474,0.87183744,0.034301177,-0.41706464,-0.23456813,-0.40383208,0.5775669,0.13456558,-0.98504555,-0.037664752,0.49623004,-0.99586064,0.21325365,-0.35012993,-0.9217631,-0.014616511,-0.18131758,0.095472716,0.3294008,0.4579521,-0.18754493,-0.7872631,0.4919853]", "{\"bounds\":{\"x\":0.18,\"y\":0.32,\"width\":0.62,\"height\":0.72},\"landmarks\":[{\"type\":\"leftEye\",\"x\":0.28,\"y\":0.42},{\"type\":\"rightEye\",\"x\":0.72,\"y\":0.42},{\"type\":\"nose\",\"x\":0.5,\"y\":0.57},{\"type\":\"mouth\",\"x\":0.5,\"y\":0.72}],\"contours\":[{\"type\":\"face\",\"points\":[{\"x\":0.08,\"y\":0.22},{\"x\":0.92,\"y\":0.22},{\"x\":0.92,\"y\":0.92},{\"x\":0.08,\"y\":0.92}]}],\"headEulerAngles\":{\"x\":3.2,\"y\":-2.8,\"z\":1.1},\"probabilities\":{\"leftEyeOpenProbability\":0.75,\"rightEyeOpenProbability\":0.82,\"smilingProbability\":0.8},\"trackingId\":null,\"confidence\":0.88}", new DateTime(2025, 10, 9, 21, 51, 20, 736, DateTimeKind.Local).AddTicks(9573), new DateTime(2025, 10, 9, 21, 51, 20, 736, DateTimeKind.Local).AddTicks(9572) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 4,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "Notes", "RegisteredDate" },
                values: new object[] { "[-0.6871036,-0.512332,0.1414342,-0.27017802,0.20686704,-0.35420096,0.91637117,0.48573646,0.51016635,0.9620185,-0.6456083,0.019996447,0.9315697,-0.79633605,0.8694421,-0.52216935,0.7530547,-0.26592624,0.93876433,0.8153692,0.2703688,0.021859683,-0.9304499,-0.790222,0.94499534,-0.61343926,-0.65688705,-0.54737085,0.0022060894,-0.066608794,-0.6738879,-0.47165304,-0.7479331,0.17134692,0.2990399,0.88826185,-0.36804768,-0.58018523,-0.73406893,0.51534545,0.56472236,0.12508616,0.117078304,0.47139302,0.4883706,0.63467675,0.46083787,0.83068854,0.1328808,-0.23824392,-0.78185594,-0.16272953,-0.3028981,-0.37679103,0.66204435,0.2910367,-0.5818822,-0.0683438,-0.2151734,-0.1796937,-0.69731396,0.46374202,-0.5164696,-0.42322487,0.6359064,0.8260447,-0.23207046,-0.23977722,-0.09537597,0.9811803,0.8458783,0.3332399,-0.5318573,-0.5765812,-0.7493532,-0.8547173,0.9047814,-0.40184292,-0.2785926,-0.6896814,-0.07427714,-0.48757553,0.31974834,-0.75955,-0.28475288,0.48884162,0.83124506,0.6288579,0.50930256,-0.9919968,0.470144,0.7002961,0.6349882,0.44562477,0.21265942,-0.89901966,-0.3584442,-0.45969683,0.83548665,0.6623259,-0.13325275,-0.29938492,-0.073935516,0.1517005,-0.084122226,-0.11509584,-0.6308722,-0.7263169,-0.62743783,0.5167617,0.38625532,0.8199608,-0.78975123,-0.52549195,0.89458346,0.7902616,-0.8560063,-0.7569196,0.861528,-0.8529352,0.9947996,0.13907161,0.25092024,-0.10337917,-0.4889637,-0.8544178,0.6982518,0.022517897,0.21075942,-0.8503335,0.5037269,0.3644782,-0.23732954,0.05908151,0.44357136,-0.7748922,0.58636,-0.83195215,0.32457224,0.83034295,0.11971382,0.557562,0.25629577,0.99254084,-0.37825212,0.6501832,0.49004734,0.16048014,0.5510413,0.42239782,0.95698667,-0.6015246,-0.32122484,0.68842185,0.66752625,0.7276756,0.44969484,-0.9705564,-0.3593358,-0.22970441,0.18665239,0.3466099,0.06292365,-0.7771044,-0.9869652,-0.9782229,0.057290304,0.15116729,0.030936671,0.6694757,-0.79609835,0.97594583,-0.08149186,-0.96881497,0.027350968,-0.5627624,0.88277584,0.2583794,-0.72512704,-0.13914692,-0.34446517,-0.4622284,0.47147658,0.7883616,-0.8073202,0.105251506,-0.31429696,0.07424862,0.39155525,0.7158957,-0.22458707,0.55691636,0.5273837,-0.44572335,-0.35630944,0.77310395,-0.5053617,0.03340015,0.979506,-0.40002924,-0.40710708,-0.66111994,-0.8704565,0.88156563,0.2184962,0.9810409,0.47996727,-0.35240987,-0.33892912,0.23028861,0.8448998,-0.8086845,0.75457066,0.7798111,-0.88523924,-0.35111922,0.87513334,0.27456206,-0.9697842,-0.09221671,0.33607408,0.9830417,0.759612,0.31504095,-0.10593726,-0.3530147,-0.55143785,-0.6357685,0.38749447,0.25424704,0.9425993,-0.1506243,0.27887335,0.6749022,-0.73203987,-0.6833452,-0.59177184,0.5899109,-0.4301346,-0.788361,0.62528425,-0.96188706,-0.5868223,-0.8387334,0.87099594,-0.41590253,0.80234563,0.74757254,-0.5604841,0.9948098,0.8979706,0.22007631,0.0031843507,0.071722746,0.26389667,-0.39014876,-0.420732,-0.18549746,-0.012497081,-0.4284891,0.53247875,0.11573574,0.26009566,0.40682384,0.28768933,-0.0044759116,-0.0875579,-0.9203315,0.51185095,0.79810596,-0.7593474,-0.7147776,-0.29530334,0.8185768,0.28249905,0.29796118,0.5698639,0.5983454,0.44404498,-0.69003475,-0.15536036,-0.2990104,0.92471564,0.3926847,0.35627642,-0.27747703,0.84619135,-0.7928494,-0.5889945,0.6581089,0.73738676,0.5937256,-0.397592,0.9983545,-0.32083976,-0.49045148,-0.22198273,0.006353915,-0.12642269,-0.12452813,0.67165536,0.7226772,-0.7642784,-0.35859007,0.7541572,0.6127482,-0.48462036,0.18460752,0.78922373,0.9659355,0.0399873,-0.01907736,0.37045753,-0.32246235,0.72687125,-0.16851087,0.19102012,0.86741096,-0.9494526,-0.43483365,0.14933275,-0.2947085,0.66866297,0.85374206,-0.9392808,-0.353073,0.6828144,-0.29365784,0.13941659,-0.22704947,-0.4800561,-0.43648997,-0.27523193,-0.43142688,-0.3616901,0.121962495,-0.534732,0.2833057,0.6385275,0.74352825,-0.79285663,-0.3384162,-0.5820731,-0.55493003,-0.38187838,-0.24353586,-0.7767319,0.9248703,-0.72851676,0.8476711,0.31852838,-0.08939369,-0.04419348,-0.69158906,0.7261391,-0.033636123,-0.94598585,-0.6180205,-0.41930926,0.10723017,0.9299338,0.80903745,-0.95480907,0.016273167,0.4459916,-0.52352273,-0.7438454,-0.19811557,-0.9607722,-0.39509124,-0.63377887,0.9077144,-0.77111655,-0.6929808,-0.641977,-0.5122511,-0.7126354,0.22359298,0.23562044,0.30425507,-0.5763411,0.7579441,-0.5651411,0.29174548,0.45442215,0.60933757,0.6077035,-0.5836429,-0.157566,0.671946,0.06794833,-0.9167115,-0.29738504,-0.46870264,0.81359446,-0.60189414,-0.38360712,0.40165374,-0.00092162145,-0.85835564,-0.49969044,0.42138365,0.8856426,0.6665745,0.48145002,0.410814,-0.31827712,-0.35121262,0.95038795,0.23839019,-0.32100073,-0.1695788,0.1463591,0.27643567,-0.31642875,-0.8280103,0.37417853,-0.24655454,0.561851,0.836654,-0.13122623,0.8397975,0.9594504,-0.63271827,0.5369604,-0.71706736,0.20509943,0.6975861,-0.50657535,0.9599171,0.871356,-0.11428913,-0.7754854,0.093976095,-0.1960545,0.0022752588,0.8723015,-0.2317155,0.81029546,-0.9563919,-0.07238528,-0.04108386,-0.53403085,0.60404384,-0.007053262,-0.76247287,-0.063070625,0.4261793,0.8477261,0.6416048,0.023927335,0.86294746,0.8398027,0.16242436,0.27287057,-0.3394879,0.46193326,0.5183608,-0.870386,0.19851738,-0.7942854,-0.015863225,-0.84463733,0.9904708,0.36703417,0.7932884,-0.39409342,-0.947617,-0.5275098,0.681296,-0.70031184,-0.39410597,-0.056850005,0.5182429,-0.09096069,0.90985763,0.37382835,-0.6445934,0.37433502,0.29943332,0.34600326,0.7789201,0.84986,-0.1481801,-0.064010195,-0.9915914,0.04590817,0.062090255,0.82110554,-0.8565666,0.54034203,-0.6460593,-0.36132953,-0.38822192,0.8378936,0.9434779,-0.19644655,-0.5245017,-0.76299036,0.19965833,0.6316205,-0.11545363,-0.04631088,-0.83356994,0.34191662,-0.5819667,-0.08020256,-0.67844015,-0.74661493,0.36301294,0.28668374,0.10652664]", "{\"bounds\":{\"x\":0.22,\"y\":0.26,\"width\":0.58,\"height\":0.68},\"landmarks\":[{\"type\":\"leftEye\",\"x\":0.32,\"y\":0.36},{\"type\":\"rightEye\",\"x\":0.68,\"y\":0.36},{\"type\":\"nose\",\"x\":0.5,\"y\":0.51},{\"type\":\"mouth\",\"x\":0.5,\"y\":0.66}],\"contours\":[{\"type\":\"face\",\"points\":[{\"x\":0.12,\"y\":0.16},{\"x\":0.88,\"y\":0.16},{\"x\":0.88,\"y\":0.86},{\"x\":0.12,\"y\":0.86}]}],\"headEulerAngles\":{\"x\":-0.9,\"y\":1.5,\"z\":-0.3},\"probabilities\":{\"leftEyeOpenProbability\":0.95,\"rightEyeOpenProbability\":0.92,\"smilingProbability\":0.75},\"trackingId\":null,\"confidence\":0.94}", new DateTime(2025, 10, 14, 21, 51, 20, 737, DateTimeKind.Local).AddTicks(375), "Face registration for Nguyễn Chỉ Huy (manager1)", new DateTime(2025, 10, 14, 21, 51, 20, 737, DateTimeKind.Local).AddTicks(374) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 5,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.35774702,0.074505195,-0.46058983,0.15670784,-0.8901615,-0.6064054,-0.18751544,-0.5108947,0.7575997,-0.30047932,0.8278527,-0.41857466,0.30647182,0.24417447,0.26938587,0.72687244,-0.40622717,0.9740724,0.9929051,-0.41022104,0.5361099,0.51253307,-0.5924399,-0.09153024,-0.8589932,0.6729267,-0.9373571,0.69184506,0.55463207,-0.4558896,0.064467564,0.05516061,0.056314837,0.22148816,0.9973971,0.97493786,-0.71134907,0.7828124,-0.3915651,-0.34904835,0.100114234,0.6807338,-0.7386283,0.69772106,-0.45715746,0.39595667,-0.85871947,0.8620203,0.32826823,0.026094826,-0.5494972,0.73867136,-0.84938306,0.030662807,-0.9374963,0.84521395,-0.33305493,0.63094044,0.015701044,-0.56308824,-0.66904825,0.12063949,-0.065526806,0.21348935,0.6350531,-0.22730789,0.5251105,-0.91501635,0.24677733,0.294448,0.43822148,-0.18903957,0.3656375,0.34195346,0.4896647,0.85537606,0.25116137,-0.2901609,-0.6343728,-0.25494987,0.5316462,-0.7993774,-0.6364232,-0.47146276,-0.90639246,0.3257962,-0.09545635,-0.97434795,0.15898447,-0.84781677,0.30799282,-0.34228948,-0.23288864,-0.82847685,-0.6800001,0.9794747,-0.25373936,0.047882352,-0.9373321,0.7701504,0.87084615,-0.9437031,-0.384757,-0.9661798,0.58787334,0.6395424,-0.6269661,-0.1913365,0.5409981,-0.79287237,-0.40594745,0.95710593,0.2653132,-0.7293491,-0.094734445,-0.86967087,-0.24293737,-0.59406406,0.11988178,-0.6907431,0.86814845,0.49945846,-0.07400081,0.09459411,0.9864552,-0.21948904,-0.95615095,0.19411437,0.02195356,0.51018995,0.109115444,-0.796721,-0.3528288,-0.40452322,-0.125796,0.47534934,0.5853796,-0.6702434,-0.05933608,-0.5459348,-0.047237676,-0.90411985,-0.51534605,-0.04814316,0.5581307,0.35088685,0.3923973,-0.50353956,0.26625758,-0.81032926,0.22241211,-0.6596753,0.92800057,0.753411,0.902002,-0.62861234,0.13029769,0.5206489,-0.952635,-0.19263764,0.59569335,0.1789195,0.78670996,-0.96919185,0.09801219,-0.60922647,0.30993477,-0.33016357,0.3964469,0.42991623,-0.45505047,-0.572694,0.465272,-0.3341834,0.3564946,0.7722683,0.01480453,0.9741424,0.53646344,-0.36443168,0.38811365,0.5473886,0.9278568,-0.16771719,-0.71222216,-0.23120925,-0.72472155,-0.1062398,-0.3065252,-0.49718368,-0.65494835,-0.93526924,-0.7176084,-0.86669844,-0.14162815,0.7738428,-0.6908298,-0.5461542,0.85384464,0.16735713,-0.9590479,-0.27743915,0.100013554,0.8363414,0.6447212,-0.20489389,-0.124947324,0.26218396,-0.6030836,-0.8702663,0.35658315,0.15615535,0.9841854,0.4117967,0.4192487,-0.95169526,0.2510627,-0.04557287,0.74303025,-0.6707786,-0.8845049,-0.5838254,0.97636163,-0.10636939,0.08486459,-0.51978123,-0.8550856,0.33197048,0.80744475,0.5826518,0.4630981,-0.4390413,-0.8797023,-0.63089365,-0.40538374,-0.3344472,-0.55262494,-0.9084846,0.1875616,0.49267173,0.8937381,0.013094471,-0.5031562,-0.43625885,0.14623316,0.18889628,-0.91945463,-0.1294051,-0.28594714,-0.18993287,-0.47721985,0.35474306,-0.28918445,0.5246232,0.051862046,0.6247775,-0.25380078,-0.79361707,-0.24852322,0.16450244,-0.34980828,0.5430822,0.45473924,-0.18573537,-0.33336446,-0.20437557,0.035857655,0.6150791,-0.18281955,-0.2463041,0.6009297,0.15954725,0.76686555,-0.7496415,-0.5645166,0.10240061,0.9193308,0.4126205,0.7473975,0.8959683,-0.60032654,0.2743195,-0.38208237,-0.0026224,0.059871625,-0.89164495,0.8501432,-0.40432552,0.3172443,-0.03016126,0.9193536,-0.7590079,0.34003866,-0.9769408,-0.15751998,-0.64934415,0.5583552,0.68257916,0.89710563,-0.6493913,-0.8469614,-0.53453374,-0.94658554,0.96035695,0.20913747,0.36323288,0.5878776,-0.539543,0.08913985,0.94946146,0.7054467,0.3335787,-0.5410145,-0.14449152,-0.235171,0.37587222,-0.07483542,-0.54263836,0.754393,-0.4417195,-0.05451873,-0.55981684,-0.7021652,0.8473417,-0.16565768,0.35993755,0.8195086,0.74380636,0.40787852,-0.9151725,0.5440454,-0.7632484,0.5155149,0.39678875,0.74292964,0.9342072,0.22090505,-0.34243932,0.78824013,0.69663876,-0.4795225,0.38968617,0.50653464,0.36778286,0.264392,-0.41422513,0.7820066,-0.5154698,0.25823018,0.4666078,0.42549127,0.10099359,0.9281862,0.3388251,0.40512744,0.71285546,-0.83236855,-0.79392725,0.12601462,0.8491999,0.5437243,0.8440712,0.052578494,0.0043123453,-0.5945839,0.46869516,0.8180638,0.06219674,0.11257881,-0.16937818,-0.8450328,-0.7323961,-0.3308785,-0.9422457,-0.962197,0.55579513,-0.06635145,-0.06994806,-0.4170503,-0.75143254,0.5779309,0.3349784,-0.5144238,0.9412707,-0.3406638,-0.5569482,-0.6914346,-0.8233102,0.9916613,-0.9699258,0.7665757,0.014832304,0.53154606,0.9390402,-0.84708554,-0.32359368,-0.66289234,-0.49777773,-0.037633203,0.79569685,-0.23228896,-0.2801901,0.37195137,-0.5723916,0.31164065,0.15788738,-0.56812793,0.87043196,0.3010221,0.84933233,-0.2207931,0.23757954,0.62312305,-0.12255284,-0.72873104,-0.7912541,0.358495,0.111307785,-0.6550239,0.96236426,0.16012976,0.64137405,0.07053543,0.08250461,0.064046115,0.14013487,-0.26394218,-0.2699187,0.9048398,0.36139667,0.21868743,-0.5685737,0.96768516,-0.21274714,0.48085642,-0.14187895,0.96302706,-0.94203216,-0.37036994,0.5014488,-0.9888203,-0.5618665,-0.12433235,-0.857671,0.2508673,-0.47100383,0.39170927,-0.3459011,0.6677712,0.94416857,0.31791133,0.22579989,-0.8427538,2.5299378E-06,-0.3644329,0.12633699,0.64927447,-0.7105532,0.36356223,-0.82849425,-0.5781704,0.70179075,0.96559215,0.93962544,-0.3693551,-0.65221936,0.2698944,-0.16412982,0.39659074,0.41314793,-0.75428116,0.30052716,-0.5183223,-0.1564727,0.9511846,-0.27800372,-0.2342936,-0.07179355,0.8316373,-0.46495005,0.7484256,-0.91804105,0.062310066,0.9606712,-0.95651466,0.99288756,-0.7258199,-0.032317393,-0.8483142,-0.6454806,0.2088466,0.6735803,-0.30559438,-0.5418757,0.079619266,-0.69061106,-0.52745867,-0.0639578,0.51168406,-0.09691334,0.25910178,-0.4441609,0.25750816,-0.7453767,0.69844973,-0.9826158,-0.25587782,0.31371886,0.048817974,0.9135708,-0.6393694,-0.278932]", "{\"bounds\":{\"x\":0.2,\"y\":0.3,\"width\":0.6,\"height\":0.7},\"landmarks\":[{\"type\":\"leftEye\",\"x\":0.3,\"y\":0.4},{\"type\":\"rightEye\",\"x\":0.7,\"y\":0.4},{\"type\":\"nose\",\"x\":0.5,\"y\":0.55},{\"type\":\"mouth\",\"x\":0.5,\"y\":0.7}],\"contours\":[{\"type\":\"face\",\"points\":[{\"x\":0.1,\"y\":0.2},{\"x\":0.9,\"y\":0.2},{\"x\":0.9,\"y\":0.9},{\"x\":0.1,\"y\":0.9}]}],\"headEulerAngles\":{\"x\":1.2,\"y\":-0.8,\"z\":0.4},\"probabilities\":{\"leftEyeOpenProbability\":0.88,\"rightEyeOpenProbability\":0.85,\"smilingProbability\":0.9},\"trackingId\":null,\"confidence\":0.91}", new DateTime(2025, 10, 19, 21, 51, 20, 737, DateTimeKind.Local).AddTicks(1258), new DateTime(2025, 10, 19, 21, 51, 20, 737, DateTimeKind.Local).AddTicks(1258) });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "admin-id",
                columns: new[] { "ConcurrencyStamp", "PasswordHash" },
                values: new object[] { "99152a41-9465-42a6-aef8-7cce0393b9d9", "AQAAAAIAAYagAAAAEC/ymAh4c5o6mNxzqIgTM2knANdRVgt+KGdIdCN4WpUX0ZloR9u5hmWp8BFBoKpHOg==" });

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee1-id",
                column: "ConcurrencyStamp",
                value: "4f1b05b1-b045-449a-9be1-8187b9545368");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee2-id",
                column: "ConcurrencyStamp",
                value: "d86e4c2c-12af-4833-820c-3ead113111f2");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee3-id",
                column: "ConcurrencyStamp",
                value: "b13a4e77-6ead-4bda-93b4-1d36fc6e517a");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee4-id",
                column: "ConcurrencyStamp",
                value: "7dd31296-bb4f-467a-8d4d-92cdc3f04aa1");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-employee5-id",
                column: "ConcurrencyStamp",
                value: "d6c37edb-47e0-46b9-b78c-edfd15178fa8");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-manager1-id",
                column: "ConcurrencyStamp",
                value: "0aa149fc-827f-4680-82f9-1b76e9befa2b");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "hr-manager2-id",
                column: "ConcurrencyStamp",
                value: "f017b888-b55d-4f64-b5ad-291bcd8f6a91");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "manager1-id",
                column: "ConcurrencyStamp",
                value: "aa64c760-806f-425c-b3e9-b5048940fbae");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "manager2-id",
                column: "ConcurrencyStamp",
                value: "27f84c2d-0e26-46ab-8009-bda20cbdaac4");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "manager3-id",
                column: "ConcurrencyStamp",
                value: "a2ad0253-5e71-49f0-b2d8-6a72c48a1a8a");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "tech1-id",
                column: "ConcurrencyStamp",
                value: "5fd0bf58-113f-45e4-a13c-d64efaefb03a");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "tech2-id",
                column: "ConcurrencyStamp",
                value: "2894efdc-1632-4df9-ad09-2b9d1e6e1bfb");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "tech3-id",
                column: "ConcurrencyStamp",
                value: "30c140c0-95b2-4305-9b48-374052c539f8");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker1-id",
                column: "ConcurrencyStamp",
                value: "59a2a129-8194-4557-9db6-976274d4a487");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker2-id",
                column: "ConcurrencyStamp",
                value: "b7755ae5-7a0a-469a-b096-286239c66780");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker3-id",
                column: "ConcurrencyStamp",
                value: "6e71ea25-dbcc-463f-86a6-4934b86d9d56");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker4-id",
                column: "ConcurrencyStamp",
                value: "c48f1dd3-5003-4959-b0b3-d3c7f19e94ea");

            migrationBuilder.UpdateData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "worker5-id",
                column: "ConcurrencyStamp",
                value: "2a76a5ec-df18-451c-aa02-84f6b23c9b5a");

            migrationBuilder.UpdateData(
                table: "Attendances",
                keyColumn: "ID",
                keyValue: 1,
                columns: new[] { "CheckInDateTime", "CheckOutDateTime", "CreatedDate", "LastUpdated" },
                values: new object[] { new DateTime(2025, 10, 27, 8, 0, 0, 0, DateTimeKind.Local), new DateTime(2025, 10, 27, 17, 0, 0, 0, DateTimeKind.Local), new DateTime(2025, 10, 27, 19, 30, 53, 133, DateTimeKind.Local).AddTicks(5991), new DateTime(2025, 10, 27, 19, 30, 53, 133, DateTimeKind.Local).AddTicks(6093) });

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "LV001",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 28, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(315));

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "LV002",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 28, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(414));

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "OT001",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 28, 19, 30, 53, 133, DateTimeKind.Local).AddTicks(9815));

            migrationBuilder.UpdateData(
                table: "EmployeeRequests",
                keyColumn: "VoucherCode",
                keyValue: "OT002",
                column: "CreatedAt",
                value: new DateTime(2025, 10, 28, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(311));

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 1,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.1234, -0.5678, 0.9012, -0.3456, 0.7890, -0.1234, 0.5678, -0.9012, 0.3456, -0.7890]", "{\"bounds\":{\"x\":0.2,\"y\":0.3,\"width\":0.6,\"height\":0.7},\"landmarks\":[],\"contours\":[],\"headEulerAngles\":{\"x\":2.5,\"y\":-1.2,\"z\":0.8},\"probabilities\":{\"leftEyeOpenProbability\":0.9,\"rightEyeOpenProbability\":0.85,\"smilingProbability\":0.7}}", new DateTime(2025, 9, 28, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5189), new DateTime(2025, 9, 28, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5046) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 2,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.2345, -0.6789, 0.0123, -0.4567, 0.8901, -0.2345, 0.6789, -0.0123, 0.4567, -0.8901]", "{\"bounds\":{\"x\":0.25,\"y\":0.28,\"width\":0.55,\"height\":0.65},\"landmarks\":[],\"contours\":[],\"headEulerAngles\":{\"x\":-1.8,\"y\":2.1,\"z\":-0.5},\"probabilities\":{\"leftEyeOpenProbability\":0.8,\"rightEyeOpenProbability\":0.9,\"smilingProbability\":0.6}}", new DateTime(2025, 10, 3, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5647), new DateTime(2025, 10, 3, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5646) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 3,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.3456, -0.7890, 0.1234, -0.5678, 0.9012, -0.3456, 0.7890, -0.1234, 0.5678, -0.9012]", "{\"bounds\":{\"x\":0.18,\"y\":0.32,\"width\":0.62,\"height\":0.72},\"landmarks\":[],\"contours\":[],\"headEulerAngles\":{\"x\":3.2,\"y\":-2.8,\"z\":1.1},\"probabilities\":{\"leftEyeOpenProbability\":0.75,\"rightEyeOpenProbability\":0.82,\"smilingProbability\":0.8}}", new DateTime(2025, 10, 8, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5651), new DateTime(2025, 10, 8, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5650) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 4,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "Notes", "RegisteredDate" },
                values: new object[] { "[0.4567, -0.8901, 0.2345, -0.6789, 0.0123, -0.4567, 0.8901, -0.2345, 0.6789, -0.0123]", "{\"bounds\":{\"x\":0.22,\"y\":0.26,\"width\":0.58,\"height\":0.68},\"landmarks\":[],\"contours\":[],\"headEulerAngles\":{\"x\":-0.9,\"y\":1.5,\"z\":-0.3},\"probabilities\":{\"leftEyeOpenProbability\":0.95,\"rightEyeOpenProbability\":0.92,\"smilingProbability\":0.75}}", new DateTime(2025, 10, 13, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5654), "Face registration for Nguyễn Quản Lý (manager1)", new DateTime(2025, 10, 13, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5653) });

            migrationBuilder.UpdateData(
                table: "FaceRegistrations",
                keyColumn: "ID",
                keyValue: 5,
                columns: new[] { "EmbeddingData", "FaceFeaturesData", "LastUpdated", "RegisteredDate" },
                values: new object[] { "[0.5678, -0.9012, 0.3456, -0.7890, 0.1234, -0.5678, 0.9012, -0.3456, 0.7890, -0.1234]", "{\"bounds\":{\"x\":0.2,\"y\":0.3,\"width\":0.6,\"height\":0.7},\"landmarks\":[],\"contours\":[],\"headEulerAngles\":{\"x\":1.2,\"y\":-0.8,\"z\":0.4},\"probabilities\":{\"leftEyeOpenProbability\":0.88,\"rightEyeOpenProbability\":0.85,\"smilingProbability\":0.9}}", new DateTime(2025, 10, 18, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5657), new DateTime(2025, 10, 18, 19, 30, 53, 134, DateTimeKind.Local).AddTicks(5656) });
        }
    }
}
